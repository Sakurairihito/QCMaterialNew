var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = QCMaterial","category":"page"},{"location":"#QCMaterial","page":"Home","title":"QCMaterial","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [QCMaterial]","category":"page"},{"location":"#QCMaterial.check_py_type-Tuple{PyCall.PyObject, String}","page":"Home","title":"QCMaterial.check_py_type","text":"Check if the Python type of a given PyObject matches the expected one\n\n\n\n\n\n","category":"method"},{"location":"#QCMaterial.convert_openfermion_op-Tuple{Any, Any}","page":"Home","title":"QCMaterial.convert_openfermion_op","text":"Convertopenfermionop\n\nArgs:     nqubit (:class:int)     openfermionop (:class:openfermion.ops.QubitOperator) Returns:     :class:qulacs.Observable\n\n\n\n\n\n","category":"method"},{"location":"#QCMaterial.gen_p_t2-NTuple{4, Any}","page":"Home","title":"QCMaterial.gen_p_t2","text":"Generate pair dobule excitations\n\n\n\n\n\n","category":"method"},{"location":"#QCMaterial.gen_t1-Tuple{Any, Any}","page":"Home","title":"QCMaterial.gen_t1","text":"Generate single excitations\n\n\n\n\n\n","category":"method"},{"location":"#QCMaterial.numerical_grad-Tuple{Any, Vector{Float64}}","page":"Home","title":"QCMaterial.numerical_grad","text":"Compute partial derivative of a given function at a point x\n\n\n\n\n\n","category":"method"},{"location":"#QCMaterial.parse_pauli_str-Tuple{Any}","page":"Home","title":"QCMaterial.parse_pauli_str","text":"Parse a tuple representing a Pauli string   When x is ((0, \"X\"), (5, \"Y\")), returns [0, 5], [PauliID.X, PauliID.Y]\n\n\n\n\n\n","category":"method"},{"location":"#QCMaterial.uccgsd","page":"Home","title":"QCMaterial.uccgsd","text":"Returns UCCGSD circuit.\n\n\n\n\n\n","category":"function"},{"location":"#QCMaterial.update_circuit_param!-Tuple{QulacsParametricQuantumCircuit, Vector{Float64}}","page":"Home","title":"QCMaterial.update_circuit_param!","text":"Update circuit parameters\n\n\n\n\n\n","category":"method"},{"location":"#QCMaterial.update_quantum_state!-Tuple{QulacsParametricQuantumCircuit, QulacsQuantumState}","page":"Home","title":"QCMaterial.update_quantum_state!","text":"Update a state using a circuit\n\n\n\n\n\n","category":"method"}]
}
